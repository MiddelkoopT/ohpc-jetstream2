- name: Configure OHPC head node
  hosts: head
  become: true
  tasks:
    - name: Change hostname
      ansible.builtin.hostname:
        name: head
        use: systemd

    - name: Configure internal interface
      ansible.builtin.template:
        owner: root
        group: root
        mode: "644"
        src: templates/ifcfg-eth1.j2
        dest: /etc/sysconfig/network-scripts/ifcfg-eth1
      register: networkmanager_eth1

    - name: Reload NetworkManager
      # noqa: no-handler
      ansible.builtin.systemd_service:
        name: NetworkManager.service
        enabled: true
        state: restarted
      when: networkmanager_eth1.changed

    - name: Check if firewalld is installed
      ansible.builtin.package_facts:

    - name: Stop and disable firewall
      # noqa: no-handler
      ansible.builtin.systemd_service:
        name: firewalld.service
        enabled: false
        state: stopped
      when: "'firewalld' in ansible_facts.packages"

    - name: Add head to /etc/hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "10.5.0.8    head.localdomain head"

    - name: Create munge group with GID 120
      ansible.builtin.group:
        name: munge
        gid: 120
        system: true
        state: present

    - name: Create munge user with UID 120
      ansible.builtin.user:
        name: munge
        uid: 120
        group: munge
        home: /run/munge
        shell: /sbin/nologin
        comment: "Runs Uid N Gid Emporium"
        system: true
        state: present

    - name: Install OHPC release
      ansible.builtin.dnf:
        name: http://repos.openhpc.community/OpenHPC/3/EL_9/{{ arch }}/ohpc-release-3-1.el9.{{ arch }}.rpm
        disable_gpg_check: true

    - name: Add OpenHPC Release Factory (3.2)
      ansible.builtin.yum_repository:
        name: openhpc-factory
        description: OpenHPC 3.2 Factory Repository
        baseurl: http://obs.openhpc.community:82/OpenHPC3:/3.2:/Factory/EL_9/
        enabled: true
        gpgcheck: false

    - name: Install OHPC base
      ansible.builtin.dnf:
        name:
          - ohpc-base
          - ohpc-slurm-client
          - ohpc-slurm-server
          - hwloc-ohpc
          - chrony
          - jq
          - mtools
          - initscripts-service # AlmaLinux

    - name: Install Warewulf (OHPC)
      when: not warewulf_release
      ansible.builtin.dnf:
        name:
          - warewulf-ohpc

    - name: Install Warewulf (Direct)
      when: warewulf_release
      ansible.builtin.dnf:
        name:
          - "{{ warewulf_rpm }}"
        disable_gpg_check: true

    - name: Add head localnet to chrony
      ansible.builtin.lineinfile:
        path: /etc/chrony.conf
        line: "allow 10.5.0.0/16"
      register: chrony_conf

    - name: Restart chrony
      # noqa: no-handler
      ansible.builtin.systemd_service:
        name: chronyd.service
        enabled: true
        state: restarted
      when: chrony_conf.changed

    - name: Setup the head node
      # noqa: command-instead-of-module
      ansible.builtin.shell: |
        set -e

        sms_name=head
        sms_ip=10.5.0.8
        internal_network=10.5.0.0
        internal_netmask=255.255.0.0
        ipv4_gateway=10.5.0.1
        dns_servers=8.8.8.8
        dhcp_start=10.5.1.1
        dhcp_end=10.5.1.254

        sed -i "s/^ipaddr:.*/ipaddr: ${sms_ip}/" /etc/warewulf/warewulf.conf
        sed -i "s/^netmask:.*/netmask: ${internal_netmask}/" /etc/warewulf/warewulf.conf
        sed -i "s/network:.*/network: ${internal_network}/" /etc/warewulf/warewulf.conf
        sed -i "s/template: default/template: static/" /etc/warewulf/warewulf.conf
        sed -i "s/range start:.*/range start: ${dhcp_start}/" /etc/warewulf/warewulf.conf
        sed -i "s/range end:.*/range end: ${dhcp_end}/" /etc/warewulf/warewulf.conf
        sed -i "s/mount: false/mount: true/" /etc/warewulf/warewulf.conf
        sed -i "s/mntops: defaults,noauto,nofail/mntops: defaults,nofail/" /etc/warewulf/nodes.conf

        ## Warewulf
        wwctl configure --all

        ## Slurm
        cp /etc/slurm/slurm.conf.ohpc /etc/slurm/slurm.conf
        cp /etc/slurm/cgroup.conf.example /etc/slurm/cgroup.conf

        perl -pi -e "s/SlurmctldHost=\S+/SlurmctldHost=${sms_name}/" /etc/slurm/slurm.conf
        perl -pi -e 's/^NodeName=c\[1-4\].*$/NodeName=c[1-4] State=UNKNOWN/' /etc/slurm/slurm.conf
        perl -pi -e 's/^PartitionName=.*$/PartitionName=normal Nodes=c[1-4] Default=YES/' /etc/slurm/slurm.conf

        ## Start head node services
        systemctl enable --now warewulfd
        systemctl enable --now munge
        systemctl enable --now slurmctld

        ## Import node image
        #wwctl image import docker://ghcr.io/warewulf/warewulf-rockylinux:9 rocky-9
        wwctl image import docker://ghcr.io/middelkoopt/warewulf-almalinux:9 rocky-9

        #wwctl image syncuser rocky-9 --write # get uid/gid in before install

        ## Create "nodes" profile and inherit settings from the "default" profile
        wwctl profile add nodes --profile default --comment "Nodes profile"

        ## Configure "default" network (netname) for "nodes" profile
        wwctl profile set --yes nodes --netname default --netmask=${internal_netmask} --gateway=${ipv4_gateway} --nettagadd=DNS=${dns_servers}

        ## Create a test user
        useradd --create-home --shell=/bin/bash --user-group auser

        touch /root/head.stamp

      args:
        creates: /root/head.stamp

- name: Setup compute nodes
  hosts: head
  become: true
  tasks:
    - name: Generate compute node image
      ansible.builtin.shell: |
        set -e

        sms_ip=10.5.0.8

        wwctl image exec rocky-9 /bin/bash <<EOF
        #export YUM_MIRROR_BASE=https://mirror.usi.edu/pub/rocky # optional mirror

        dnf install -y dnf-plugins-core
        dnf config-manager --set-enabled crb
        dnf install -y epel-release

        dnf upgrade -y
        dnf install -y install kernel
        passwd -d root # allow serial console login

        ## Allocate static UID:120 GID:120 for munge
        groupadd --system -g 120 munge
        useradd --system -u 120 -g 120 -d /run/munge -s /sbin/nologin -c "Runs Uid N Gid Emporium" munge

        dnf install -y http://repos.openhpc.community/OpenHPC/3/EL_9/{{ arch }}/ohpc-release-3-1.el9.{{ arch }}.rpm

        dnf install -y ohpc-base-compute hwloc-ohpc
        dnf install -y ohpc-slurm-client
        systemctl enable munge

        dnf install -y chrony
        echo "server ${sms_ip} iburst" >> /etc/chrony.conf

        echo SLURMD_OPTIONS="--conf-server ${sms_ip}" > /etc/sysconfig/slurmd
        systemctl enable slurmd

        dnf install -y lmod-ohpc

        dnf clean all
        EOF

        ## Create node munge overlay
        wwctl overlay create munge
        wwctl overlay mkdir munge --mode 0700 /etc/munge
        wwctl overlay import munge /etc/munge/munge.key
        wwctl overlay chown munge /etc/munge/munge.key $(id -u munge) $(id -g munge)
        wwctl overlay chown munge /etc/munge $(id -u munge) $(id -g munge)

        ## Add munge to nodes
        wwctl profile set --yes nodes --system-overlays munge

        ## Set as default image and set kernel args
        wwctl profile set --yes nodes --image rocky-9
        wwctl profile set --yes nodes --kernelargs='console=tty0,"console=ttyS0,115200",systemd.log_color=0,crashkernel=no,vga=791'

        touch /root/configure-node-image.stamp

      args:
        creates: /root/configure-node-image.stamp
