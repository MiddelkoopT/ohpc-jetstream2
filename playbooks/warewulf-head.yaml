- name: Configure Warewulf head node
  hosts: head
  become: true
  tasks:

    - name: Install Packages
      ansible.builtin.apt:
        name:
          - ca-certificates
          - git
          - curl
          - chrony

    - name: Add head to /etc/hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "10.5.0.8    head.localdomain head"

    - name: Add head localnet to chrony
      ansible.builtin.lineinfile:
        path: /etc/chrony/chrony.conf
        line: "allow 10.5.0.0/16"
      register: chrony_conf

    - name: Restart chrony
      # noqa: no-handler
      ansible.builtin.systemd_service:
        name: chronyd.service
        enabled: true
        state: restarted
      when: chrony_conf.changed

    - name: Install Warewulf build dependencies
      ansible.builtin.apt:
        name:
          - isc-dhcp-server
          - tftpd-hpa
          - nfs-kernel-server
          - slurmd
          - slurmctld
          - ipxe
          - golang
          - unzip

    - name: Build Warewulf from source
      # noqa: command-instead-of-module
      ansible.builtin.shell: |
        cd /usr/src
        git clone https://github.com/warewulf/warewulf.git
        cd warewulf
        make clean defaults \
          PREFIX=/usr \
          BINDIR=/usr/bin \
          SYSCONFDIR=/etc \
          DATADIR=/usr/share \
          LOCALSTATEDIR=/var/lib \
          SHAREDSTATEDIR=/var/lib \
          MANDIR=/usr/share/man \
          INFODIR=/usr/share/info \
          DOCDIR=/usr/share/doc \
          SRVDIR=/var/lib \
          TFTPDIR=/var/lib/tftpboot \
          SYSTEMDDIR=/usr/lib/systemd/system \
          BASHCOMPDIR=/etc/bash_completion.d/ \
          FIREWALLDDIR=/usr/lib/firewalld/services \
          WWCLIENTDIR=/warewulf
        make all
        make install

        touch /root/warewulf-build.stamp

      args:
        creates: /root/warewulf-build.stamp

    - name: WW4 warewulf.conf
      ansible.builtin.template:
        src: templates/warewulf.conf.j2
        dest: /etc/warewulf/warewulf.conf
        mode: "600"

    - name: WW4 defaults.conf
      ansible.builtin.template:
        src: templates/defaults.conf.j2
        dest: /etc/warewulf/defaults.conf
        mode: "600"

    - name: Setup the head node
      # noqa: command-instead-of-module
      ansible.builtin.shell: |
        set -e

        ## Config
        sms_name=head

        ## Warewulf
        wwctl configure hostfile
        wwctl configure ssh
        wwctl configure nfs

        ## Slurm
        # cp /etc/slurm/slurm.conf.ohpc /etc/slurm/slurm.conf
        # cp /etc/slurm/cgroup.conf.example /etc/slurm/cgroup.conf

        # perl -pi -e "s/SlurmctldHost=\S+/SlurmctldHost=${sms_name}/" /etc/slurm/slurm.conf
        # odeName=c[0-4] State=UNKNOWN
        # perl -pi -e 's/^NodeName=c\[1-4\].*$/NodeName=c[0-4] State=UNKNOWN/' /etc/slurm/slurm.conf
        # perl -pi -e 's/^PartitionName=normal Nodes=c\[1-4\]/PartitionName=normal Nodes=c[0-4]/' /etc/slurm/slurm.conf

        ## Start head node services
        systemctl enable --now warewulfd
        systemctl enable --now munge
        systemctl enable --now slurmctld

        ## Configure warewulf default profile for network
        wwctl profile set -y default --netmask 255.255.0.0

        touch /root/head.stamp

      args:
        creates: /root/head.stamp

- name: Setup compute nodes
  hosts: head
  become: true
  tasks:
    - name: Generate compute node image
      ansible.builtin.shell: |
        set -e

        ## Config
        sms_ip=10.5.0.8

        ## Import node image
        wwctl container import docker://registry.docker.com/library/ubuntu:24.04 ubuntu-24.04
        wwctl container syncuser ubuntu-24.04 --write # set head uid/gid in container before install
        wwctl overlay build

        ## Build and configure node
        wwctl container exec ubuntu-24.04 /bin/bash <<EOF

        export DEBIAN_FRONTEND=noninteractive
        apt-get update
        apt-get install --yes apt-utils
        apt-get dist-upgrade --yes

        ## Install kernel
        apt-get install --yes --no-install-recommends linux-image-generic linux-tools-generic
        rm -v /initrd.img* /vmlinuz*

        ## Install base packages
        apt-get install --yes --no-install-recommends curl jq zstd cpio procps iproute2 busybox-static
        apt-get install --yes --no-install-recommends init udev dbus polkitd
        apt-get install --yes --no-install-recommends systemd-timesyncd systemd-resolved
        apt-get install --yes --no-install-recommends openssh-server python3
        apt-get install --yes less vim

        ## Configure Image
        passwd -d root # allow serial console login

        mount -t devpts devpts /dev/pts ## workarround
        install -dv --mode=700 --owner=munge --group=munge /etc/munge
        touch /etc/munge/munge.key ## blank file will be replace with the overlay (bypass container install error)
        apt-get install --yes munge
        systemctl enable munge
        umount /dev/pts ## workarround

        apt-get install --yes slurmd
        echo SLURMD_OPTIONS="--conf-server ${sms_ip}" > /etc/default/slurmd
        systemctl enable slurmd

        apt-get install --yes lmod

        ## Cleanup
        apt-get clean

        echo "exit container"
        EOF

        #wwctl container syncuser rocky-9 --write

        # wwctl overlay mkdir generic --mode 0700 /etc/munge
        # wwctl overlay import generic /etc/munge/munge.key
        # wwctl overlay chown generic /etc/munge/munge.key $(id -u munge) $(id -g munge)
        # wwctl overlay chown generic /etc/munge $(id -u munge) $(id -g munge)

        # useradd --create-home --shell=/bin/bash --user-group auser
        # wwctl container syncuser rocky-9 --write
        # wwctl overlay build

        touch /root/configure-node-image.stamp

      args:
        creates: /root/configure-node-image.stamp
