- name: Configure Warewulf Head Node
  hosts: head
  become: true
  tasks:

    - name: Install base packages (apt)
      ansible.builtin.apt:
        name:
          - ca-certificates
          - git
          - curl
          - jq
      when: ansible_pkg_mgr == "apt"

    - name: Install Warewulf dependencies (apt)
      ansible.builtin.apt:
        name:
          - unzip
          - golang
          - chrony
          - isc-dhcp-server
          - tftpd-hpa
          - ipxe
          - nfs-kernel-server
          - slurmd
          - slurmctld
          - openmpi-bin
      when: ansible_pkg_mgr == "apt"

    - name: Install base packages (dnf)
      ansible.builtin.dnf:
        name:
          - ca-certificates
          - epel-release
          - git
          - curl
          - jq
      when: ansible_pkg_mgr == "dnf"

    - name: Install Warewulf build dependencies (dnf)
      ansible.builtin.dnf:
        name:
          - unzip
          - golang
          - chrony
          - dhcp-server
          - tftp-server
          - ipxe-bootimgs-x86
          - ipxe-bootimgs-aarch64
          - slurm-slurmd
          - slurm-slurmctld
      when: ansible_pkg_mgr == "dnf"

    - name: Add head localnet to chrony
      ansible.builtin.lineinfile:
        path: "{{ '/etc/chrony/chrony.conf' if ansible_os_family == 'Debian' else '/etc/chrony.conf' }}"
        line: "allow 10.5.0.0/16"
      register: chrony_conf

    - name: Restart chrony
      # noqa: no-handler
      ansible.builtin.systemd_service:
        name: chronyd.service
        enabled: true
        state: restarted
      when: chrony_conf.changed

    - name: Build Warewulf from source
      # noqa: command-instead-of-module
      ansible.builtin.shell: |
        set -e

        cd /usr/src
        git clone --branch tm-dev https://github.com/MiddelkoopT/warewulf.git
        cd warewulf
        make clean defaults \
          PREFIX=/usr \
          BINDIR=/usr/bin \
          SYSCONFDIR=/etc \
          DATADIR=/usr/share \
          LOCALSTATEDIR=/var/lib \
          SHAREDSTATEDIR=/var/lib \
          MANDIR=/usr/share/man \
          INFODIR=/usr/share/info \
          DOCDIR=/usr/share/doc \
          SRVDIR=/var/lib \
          TFTPDIR=/var/lib/tftpboot/ \
          SYSTEMDDIR=/usr/lib/systemd/system \
          BASHCOMPDIR=/etc/bash_completion.d/ \
          FIREWALLDDIR=/usr/lib/firewalld/services \
          WWCLIENTDIR=/warewulf
        make all
        make install

      args:
        creates: /usr/bin/wwctl

    - name: Setup the head node
      # noqa: command-instead-of-module
      ansible.builtin.shell: |
        set -e

        ## Config
        sms_name=head
        sms_ip=10.5.0.8
        internal_network=10.5.0.0
        internal_netmask=255.255.0.0
        ipv4_gateway=10.5.0.1
        dns_servers=8.8.8.8
        dhcp_start=10.5.1.1
        dhcp_end=10.5.1.254

        ## Configure warewulf.conf
        sed -i "s/^ipaddr:.*/ipaddr: ${sms_ip}/" /etc/warewulf/warewulf.conf
        sed -i "s/^netmask:.*/netmask: ${internal_netmask}/" /etc/warewulf/warewulf.conf
        sed -i "s/^network:.*/network: ${internal_network}/" /etc/warewulf/warewulf.conf
        sed -i "s/template: default/template: static/" /etc/warewulf/warewulf.conf
        sed -i "s/range start:.*/range start: ${dhcp_start}/" /etc/warewulf/warewulf.conf
        sed -i "s/range end:.*/range end: ${dhcp_end}/" /etc/warewulf/warewulf.conf

        ## Start Warewulf
        systemctl enable --now warewulfd
        wwctl configure --all
        systemctl status warewulfd

        ## Munge
        create-munge-key
        wwctl overlay mkdir wwinit --mode 0700 /etc/munge
        wwctl overlay import wwinit /etc/munge/munge.key
        wwctl overlay chown wwinit /etc/munge/munge.key $(id -u munge) $(id -g munge)
        wwctl overlay chown wwinit /etc/munge $(id -u munge) $(id -g munge)

        ## Slurm
        sed -i "s/^SlurmctldHost=.*/SlurmctldHost=${sms_name}/" /etc/slurm/slurm.conf
        grep '^SlurmctldHost=' /etc/slurm/slurm.conf

        sed -i 's/^NodeName=.*$/NodeName=c[1-4] State=UNKNOWN/' /etc/slurm/slurm.conf
        grep '^NodeName' /etc/slurm/slurm.conf

        sed -i 's/^PartitionName=.*$/PartitionName=normal Nodes=c[1-4] Default=YES/' /etc/slurm/slurm.conf
        grep '^PartitionName' /etc/slurm/slurm.conf

        grep 'SlurmctldParameters=' /etc/slurm/slurm.conf || echo 'SlurmctldParameters=enable_configless' >> /etc/slurm/slurm.conf
        grep 'SlurmctldParameters=' /etc/slurm/slurm.conf

        ## Set hostsname to ${sms_name} in hosts.ww template
        sed -i "s/warewulf/${sms_name}/" /var/lib/warewulf/overlays/hosts/rootfs/etc/hosts.ww
        sed -i "s/warewulf/${sms_name}/" /var/lib/warewulf/overlays/host/rootfs/etc/hosts.ww

        ## Configure warewulf default profile for network
        wwctl profile set -y default --netname default --netmask=${internal_netmask} --gateway=${ipv4_gateway}
        wwctl profile set -y default --netname default --netdev=default --nettagadd=DNS=${dns_servers}

        ## Start slurm
        systemctl enable --now munge
        systemctl status munge

        systemctl enable --now slurmctld
        systemctl status slurmctld

        ## Create a test user
        useradd --create-home --shell=/bin/bash --user-group test

      args:
        creates: /var/run/slurm/slurmctld.pid
